#!/usr/bin/env ruby
# -*- mode: ruby -*-
#
#    Copyright (c)2012 Shigeya Suzuki
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

require 'optparse'
require 'nokogiri'
require 'zlib'

module OmniOutliner

  class Document < Nokogiri::XML::SAX::Document
    def initialize
      @in_item = false
      @in_style = false
      @str = ""
      super
    end
    
    def characters(s)
      @str += s if @in_item && !@in_style
    end
    
    def start_element(name, attrs)
      @in_item = true if name == "item"
      @in_style = true if name == "style"
      if name == "cell"
        # if it is a hyperlink, use name part as part of output
        if n = attrs.find{|a| a[0] == "name"}
          @str += n[1]
        end
      end
    end
  
    def end_element(name)
      @in_item = false if name == "item"
      @in_style = false if name == "style"
      if name == "values"
        @str.gsub(/\n/, '')
        puts @str
        @str = ""
      end
    end
  end
  
  class Parser < Nokogiri::XML::SAX::Parser
    def initialize(fn)
      @file = nil
      if fn =~ /\.oo3$/
        fn = "#{fn}/contents.xml"
        begin
          @basefile = File.open(fn)
          @file = Zlib::GzipReader.new(@basefile)
        rescue Zlib::GzipFile::Error
          @file = @basefile
        end
      else
        @file = File.open(fn, rm)
      end
      super(Document.new)
    end
    
    def parse
      super(@file)
    end
  end

end

ARGV.options do |o|
  o.banner = "ruby #{$0} [options] OmniOutliner-Document-Package"
  o.separator "Options:"
  o.parse!
end

ARGV.each do |file|
  parser = OmniOutliner::Parser.new(file)
  parser.parse
end
